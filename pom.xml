<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.hf.dac</groupId>
    <artifactId>root</artifactId>
    <version>0.7.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <targetRepository>file:m2repo/</targetRepository>

        <jar-plugin.version>3.0.2</jar-plugin.version>

        <postgresql.version>9.1-901.jdbc4</postgresql.version><!-- DB-->
        <commons-cli.version>1.2</commons-cli.version><!-- parsing commandline options in Module common-->

        <spring.boot.version>1.3.3.RELEASE</spring.boot.version><!-- springboot bootstrapper-->
        <springfox-swagger.version>2.0.2
        </springfox-swagger.version><!-- generate docs and clients for Rest via spring boot-->

        <apacheds-server-jndi.version>1.5.5</apacheds-server-jndi.version><!-- connect to ldap -->
        <slf4j.version>1.7.21</slf4j.version><!-- logging slf impl-->
        <lombok.version>1.16.8</lombok.version><!-- generate constructor, getter, setter via annotation-->
        <inject.version>1</inject.version><!-- inject annotation api for multiple di containers-->
        <transaction-api.version>1.2</transaction-api.version><!-- javax.transaction-->
        <pax-cdi-api.version>0.12.0</pax-cdi-api.version>
        <jpa-api2.1.version>1.0.0.Final</jpa-api2.1.version><!-- jpa-api, the implementation is provided by the app-server like JBoss or SpringBoot-->
        <hibernate.version>5.2.2.Final</hibernate.version>
        <karaf.version>4.0.8</karaf.version>
        <pax-jdbc.version>0.9.0</pax-jdbc.version><!--feature to create Datasources -->
        <apache-cxf.version>3.1.9</apache-cxf.version><!-- rest für osgi -->
        <junit.version>4.12</junit.version>
        <httpcore-osgi.version>4.4.5</httpcore-osgi.version>

        <spring.version>4.2.6.RELEASE_1</spring.version>
        <aopalliance.version>1.0_6</aopalliance.version><!--von spring und guice benötigt-->
        <spring-data-commons.version>1.11.4.RELEASE</spring-data-commons.version>
        <spring-data.version>1.9.4.RELEASE</spring-data.version>

        <apache-commons-lang3.version>3.4</apache-commons-lang3.version><!--Equalsbuilder wirklich benötigt? Was kann das Paket noch-->
        <felix-commands.version>0.4.0</felix-commands.version>
        <karaf-shell.version>4.0.6</karaf-shell.version>
        <guice.version>4.1.0</guice.version>
        <guava.version>19.0</guava.version> <!--von guice benötigt in version > 19-->
        <!--<guava-swagger.version>18.0</guava-swagger.version> --><!--von swagger in version 18 benötigt-->
        <osgi-cmpn.version>6.0.0</osgi-cmpn.version>

        <!--rest-->
        <rs-api.version>2.0.1</rs-api.version>
        <swagger.version>1.5.12</swagger.version>
        <swagger-codegen.version>2.2.1</swagger-codegen.version>
        <jackson.version>2.8.5</jackson.version>
        <snakeyaml.version>1.17</snakeyaml.version>
        <aries.rsa.version>1.9.0</aries.rsa.version>
        <gson.version>2.7</gson.version>
        <commons-codec.version>1.10</commons-codec.version>

        <camel.version>2.18.1</camel.version>


    </properties>

    <scm>
        <!--<developerConnection>scm:git:ssh://192.168.178.20:122/volume1/Data/workspace/repos/MarketDataProvider</developerConnection>-->
        <developerConnection>scm:git:https://holgerfischer@bitbucket.org/holgerfischer/dac.git</developerConnection>
        <tag>dac-0.3.1</tag>
    </scm>

    <modules>
        <module>bundles</module>
        <module>distributions</module>
        <!--<module>client</module>-->
        <module>features</module>
        <module>pax-exam-test</module>
        <module>tools</module>
    </modules>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.hf.dac</groupId>
                <artifactId>de.hf.dac.common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.io</groupId>
                <artifactId>de.hf.dac.io.baserunner</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac</groupId>
                <artifactId>de.hf.dac.security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider.api</groupId>
                <artifactId>de.hf.dac.marketdataprovider.api.domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider.api</groupId>
                <artifactId>de.hf.dac.marketdataprovider.api.application</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider.api</groupId>
                <artifactId>de.hf.dac.marketdataprovider.api.persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider</groupId>
                <artifactId>de.hf.dac.marketdataprovider.service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider</groupId>
                <artifactId>de.hf.dac.marketdataprovider.restservice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider</groupId>
                <artifactId>de.hf.dac.marketdataprovider.persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.api</groupId>
                <artifactId>de.hf.dac.api.io</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.api</groupId>
                <artifactId>de.hf.dac.api.security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider.api</groupId>
                <artifactId>de.hf.dac.marketdataprovider.api.service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider.api</groupId>
                <artifactId>de.hf.dac.marketdataprovider.api.restservice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.marketdataprovider</groupId>
                <artifactId>de.hf.dac.marketdataprovider.restsecurity</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.io</groupId>
                <artifactId>de.hf.dac.io.env</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.io</groupId>
                <artifactId>de.hf.dac.io.configuration</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.hf.dac.io</groupId>
                <artifactId>de.hf.dac.io.efmb</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache-commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.ops4j.pax.cdi</groupId>
                <artifactId>pax-cdi-api</artifactId>
                <version>${pax-cdi-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-server-jndi</artifactId>
                <version>${apacheds-server-jndi.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${inject.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.transaction</groupId>
                <artifactId>javax.transaction-api</artifactId>
                <version>${transaction-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${jpa-api2.1.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix.gogo</groupId>
                <artifactId>org.apache.felix.gogo.commands</artifactId>
                <version>${felix-commands.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.shell</groupId>
                <artifactId>org.apache.karaf.shell.console</artifactId>
                <version>${karaf-shell.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>${spring-data.version}</version>
            </dependency>

            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.cmpn</artifactId>
                <version>${osgi-cmpn.version}</version>
            </dependency>

            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${osgi-cmpn.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${rs-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--security and ldap-->
            <dependency>
                <groupId>org.apache.karaf.jaas</groupId>
                <artifactId>org.apache.karaf.jaas.boot</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.jaas</groupId>
                <artifactId>org.apache.karaf.jaas.config</artifactId>
                <version>${karaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.karaf.jaas</groupId>
                <artifactId>org.apache.karaf.jaas.modules</artifactId>
                <version>${karaf.version}</version>
            </dependency>

            <!-- rest -->

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-core</artifactId>
                <version>${apache-cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${apache-cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-service-description-swagger</artifactId>
                <version>${apache-cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-security-cors</artifactId>
                <version>${apache-cxf.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!--deserialisation in rest client -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <!-- rest ende -->

            <!--camel-->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-scr</artifactId>
                <version>${camel.version}</version>
            </dependency>


            <!--Apache Options für Optionparser in Common -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-osgi</artifactId>
                <version>${httpcore-osgi.version}</version>
            </dependency>

            <!--test-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.2</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <arguments>-DtargetRepository=${targetRepository}</arguments>
                        <preparationGoals>clean install</preparationGoals>
                        <!--<releaseProfiles>release</releaseProfiles>-->
                        <localCheckout>true</localCheckout>
                        <tagNameFormat>dac-@{project.version}</tagNameFormat>
                        <useReleaseProfile>true</useReleaseProfile>
                        <goals>deploy</goals>
                        <pushChanges>false</pushChanges>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.2.5</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <distributionManagement>
        <repository>
            <id>localRepo</id>
            <name>localRepo</name>
            <url>${targetRepository}</url>
        </repository>
    </distributionManagement>

</project>
