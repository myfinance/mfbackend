<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.hf.marketDataProvider</groupId>
    <artifactId>marketDataProvider</artifactId>
    <version>0.3.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <targetRepository>file:m2repo/</targetRepository>

        <postgresql.version>9.1-901.jdbc4</postgresql.version><!-- DB-->
        <commons-cli.version>1.2</commons-cli.version><!-- parsing commandline options in Module common-->

        <spring.boot.version>1.3.3.RELEASE</spring.boot.version><!-- springboot bootstrapper-->
        <springfox-swagger.version>2.0.2</springfox-swagger.version><!-- generate docs and clients for Rest via spring boot-->

        <apacheds-server-jndi.version>1.5.5</apacheds-server-jndi.version><!-- connect to ldap -->
        <logback.version>1.1.5</logback.version><!-- logging slf impl-->
        <lombok.version>1.16.8</lombok.version><!-- generate constructor, getter, setter via annotation-->
        <inject.version>1</inject.version><!-- inject annotation api for multiple di containers-->
        <usertype.version>5.0.0.GA</usertype.version><!-- Usertype can persist both JSR 310 and Joda Time based dates and times to a database using Hibernate-->

    </properties> 
    
    <scm>
        <!--<developerConnection>scm:hg:file:///Q://marketDataProvider</developerConnection>-->
        <!--<developerConnection>scm:git:http://myserver:8081/r/gitauthtest.git</developerConnection>-->
        <developerConnection>scm:git:ssh://192.168.178.20:122/volume1/Data/workspace/repos/MarketDataProvider</developerConnection>

	<tag>marketDataProvider-0.2.7</tag>
    </scm>
  
    <modules>
        <module>app</module>
        <module>bootstrapper</module>
        <module>client</module>
        <module>utils</module>
    </modules>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.hf.marketDataProvider</groupId>
                <artifactId>common</artifactId>
                <version>0.3.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>de.hf.marketDataProvider</groupId>
                <artifactId>springcommon</artifactId>
                <version>0.3.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>de.hf.marketDataProvider</groupId>
                <artifactId>domain</artifactId>
                <version>0.3.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>de.hf.marketDataProvider</groupId>
                <artifactId>service</artifactId>
                <version>0.3.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>de.hf.marketDataProvider</groupId>
                <artifactId>persistence</artifactId>
                <version>0.3.1-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <type>pom</type>
                <version>${spring.boot.version}</version>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-server-jndi</artifactId>
                <version>${apacheds-server-jndi.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${inject.version}</version>
            </dependency>
            <!--Usertype can persist both JSR 310 and Joda Time based dates and times to a database using Hibernate.-->
            <dependency>
                <groupId>org.jadira.usertype</groupId>
                <artifactId>usertype.core</artifactId>
                <version>${usertype.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jadira.usertype</groupId>
                <artifactId>usertype.extended</artifactId>
                <version>${usertype.version}</version>
            </dependency>
            <!-- Usertype end -->
            <!--Apache Options fÃ¼r Optionparser in Common -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.2</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <arguments>-DtargetRepository=${targetRepository}</arguments>
                        <preparationGoals>clean install</preparationGoals>
                        <!--<releaseProfiles>release</releaseProfiles>-->
                        <localCheckout>true</localCheckout>
                        <tagNameFormat>${project.artifactId}-@{project.version}</tagNameFormat>
                        <useReleaseProfile>true</useReleaseProfile>
                        <goals>deploy</goals>
                        <pushChanges>false</pushChanges>
                    </configuration>
            </plugin>
        </plugins>
    </pluginManagement>
  </build>
    <distributionManagement>
    <repository>
      <id>localRepo</id>
      <name>localRepo</name>
      <url>${targetRepository}</url>
    </repository>
  </distributionManagement>
  
</project>
