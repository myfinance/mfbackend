<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.hf.marketDataProvider</groupId>
        <artifactId>bootstrapper</artifactId>
        <version>0.3.1-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>

    <artifactId>marketDataProvider-wildfly</artifactId>
    <packaging>war</packaging>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Define the version of JBoss' Java EE 6 APIs and Tools we want
            to import. -->
        <jboss.bom.version>3.0.2.Final-redhat-11</jboss.bom.version>

        <version.jboss.bom.eap>6.2.3.GA</version.jboss.bom.eap>
    </properties>

    <dependencyManagement>
    <dependencies>
        <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
    of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
    of artifacts. We use this here so that we always get the correct versions
    of artifacts. Here we use the jboss-javaee-6.0-with-tools stack (you can
    read this as the JBoss stack of the Java EE 6 APIs, with some extras tools
    for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate
    stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras
    from the Hibernate family of projects) -->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${jboss.bom.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.bom.eap</groupId>
            <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
            <version>${version.jboss.bom.eap}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>

    </dependencyManagement>

    <dependencies>

        <dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>2.3.7.Final</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
            <version>1.2</version>
		</dependency>		
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
            <scope>provided</scope>
		</dependency>
		
		<!-- org.jboss.security -->
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>picketbox</artifactId>
            <version>4.0.19.SP6-redhat-1</version>
			<scope>provided</scope>
		</dependency>

		
		<!-- Import the EJB API, we use provided scope as the API is included
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-ext-api</artifactId>
			<version>2.1.0.redhat-1</version>
		</dependency>
		
		
		<!-- swagger for Apid-Doc generation -->
		<dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-jaxrs_2.10</artifactId>
            <scope>compile</scope>
            <version>1.3.12</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <!-- workaround guava 15/jboss 7.1.1 incompatibility -->
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>	        <!-- workaround guava 15/jboss 7.1.1 incompatibility -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>15.0</version>
            <classifier>cdi1.0</classifier>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>de.hf.marketDataProvider</groupId>
            <artifactId>domain</artifactId>
        </dependency>
        <dependency>
            <groupId>de.hf.marketDataProvider</groupId>
            <artifactId>persistence</artifactId>
        </dependency>
        <dependency>
            <groupId>de.hf.marketDataProvider</groupId>
            <artifactId>service</artifactId>
        </dependency>
			
     </dependencies> 

    <build>
        <!-- Maven will append the version to the finalName (which is the 
            name given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>
        <plugins>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to 
                        catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
