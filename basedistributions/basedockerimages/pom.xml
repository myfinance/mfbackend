<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>basedistributions</artifactId>
        <groupId>de.hf.dac</groupId>
        <version>0.11.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <artifactId>basedocker-images</artifactId>
    <dependencies>
        <dependency>
            <groupId>de.hf.dac</groupId>
            <artifactId>karaf-rest-dist</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>de.hf.dac</groupId>
            <artifactId>database</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.liquibase</groupId>
                                    <artifactId>liquibase-core</artifactId>
                                    <version>${liquibase.version}</version>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.postgresql</groupId>
                                    <artifactId>postgresql</artifactId>
                                    <version>${postgresql.version}</version>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <!-- other configurations here -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <id>docker-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>docker</finalName>
                            <descriptors>
                                <descriptor>src/main/assembly/docker-prep-assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.23.0</version>
                <configuration>
                    <dockerHost>tcp://localhost:2375</dockerHost>
                    <images>
                        <image>
                            <name>holgerfischer/myfinance:${project.version}-mfdb</name>
                            <alias>postgres_testmf</alias>
                            <build>
                                <dockerFileDir>${project.build.directory}/docker-prep/mfpostgres</dockerFileDir>
                                <filter>@</filter>
                            </build>
                        </image>
                        <image>
                            <name>holgerfischer/myfinance:${project.version}-mfdbupgrade</name>
                            <build>
                                <dockerFileDir>${project.build.directory}/docker-prep/mfdb</dockerFileDir>
                                <filter>@</filter>
                            </build>
                        </image>
                        <image>
                            <name>holgerfischer/myfinance:${project.version}-myfinance-clientless</name>
                            <build>
                                <dockerFileDir>${project.build.directory}/docker-prep/myfinance</dockerFileDir>
                                <filter>@</filter>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>build-docker</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!-- "build" should be used to create the images with the
                                 artifact -->
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>push-docker</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>