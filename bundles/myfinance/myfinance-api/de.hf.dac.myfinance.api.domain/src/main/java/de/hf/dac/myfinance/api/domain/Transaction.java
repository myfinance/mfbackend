/** ----------------------------------------------------------------------------
 *
 * ---          HF - Application Development                       ---
 *              Copyright (c) 2013, ... All Rights Reserved
 *
 *
 *  Project     : domain
 *
 *  File        : Transaction.java
 *
 *  Author(s)   : hf
 *
 *  Created     : 16.12.2013
 *
 * ----------------------------------------------------------------------------
 */
 package de.hf.dac.myfinance.api.domain;
// Generated by Hibernate Tools 5.2.5.Final


import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Transaction generated by hbm2java
*/
@Entity
@Table(
    name="mf_transaction")
@ApiModel
public class Transaction  implements java.io.Serializable {
    private static final long serialVersionUID = 1L;


     private Integer transactionid;
     private String description;
     private LocalDate transactiondate;
     private LocalDate lastchanged;
     private Set<Trade> trades = new HashSet<Trade>(0);
     private Set<Cashflow> cashflows = new HashSet<Cashflow>(0);

    public Transaction() {
    }

	
    public Transaction(String description, LocalDate transactiondate, LocalDate lastchanged) {
        this.description = description;
        this.transactiondate = transactiondate;
        this.lastchanged = lastchanged;
    }
    public Transaction(String description, LocalDate transactiondate, LocalDate lastchanged, Set<Trade> trades, Set<Cashflow> cashflows) {
       this.description = description;
       this.transactiondate = transactiondate;
       this.lastchanged = lastchanged;
       this.trades = trades;
       this.cashflows = cashflows;
    }

    @Id @GeneratedValue(strategy=IDENTITY)    
    @Column(name="transactionid", unique=true, nullable=false)
    @ApiModelProperty(required = true)
    public Integer getTransactionid() {
        return this.transactionid;
    }
    
    public void setTransactionid(Integer transactionid) {
        this.transactionid = transactionid;
    }
    
    @Column(name="description", nullable=false)
    @ApiModelProperty(required = true)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="transactiondate", nullable=false, length=13)
    @ApiModelProperty(required = true)
    public LocalDate getTransactiondate() {
        return this.transactiondate;
    }
    
    public void setTransactiondate(LocalDate transactiondate) {
        this.transactiondate = transactiondate;
    }
    
    @Column(name="lastchanged", nullable=false, length=13)
    @ApiModelProperty(required = true)
    public LocalDate getLastchanged() {
        return this.lastchanged;
    }
    
    public void setLastchanged(LocalDate lastchanged) {
        this.lastchanged = lastchanged;
    }
    @OneToMany(fetch=FetchType.LAZY, mappedBy="transaction")
    @ApiModelProperty(required = true)
    public Set<Trade> getTrades() {
        return this.trades;
    }
    
    public void setTrades(Set<Trade> trades) {
        this.trades = trades;
    }
    @OneToMany(fetch=FetchType.LAZY, mappedBy="transaction")
    @ApiModelProperty(required = true)
    public Set<Cashflow> getCashflows() {
        return this.cashflows;
    }
    
    public void setCashflows(Set<Cashflow> cashflows) {
        this.cashflows = cashflows;
    }




}
