/** ----------------------------------------------------------------------------
 *
 * ---          HF - Application Development                       ---
 *              Copyright (c) 2013, ... All Rights Reserved
 *
 *
 *  Project     : domain
 *
 *  File        : InstrumentGraph.java
 *
 *  Author(s)   : hf
 *
 *  Created     : 16.12.2013
 *
 * ----------------------------------------------------------------------------
 */
 package de.hf.dac.myfinance.api.domain;
// Generated by Hibernate Tools 5.2.5.Final


import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * InstrumentGraph generated by hbm2java
*/
@Entity
@Table(
    name="mf_instrumentgraph")
@ApiModel
public class InstrumentGraph  implements java.io.Serializable {
    private static final long serialVersionUID = 1L;


     private InstrumentGraphId id;
     private Instrument instrumentByAncestor;
     private Instrument instrumentByDescendant;
     private int pathlength;

    public InstrumentGraph() {
    }

    public InstrumentGraph(InstrumentGraphId id, Instrument instrumentByAncestor, Instrument instrumentByDescendant, int pathlength) {
       this.id = id;
       this.instrumentByAncestor = instrumentByAncestor;
       this.instrumentByDescendant = instrumentByDescendant;
       this.pathlength = pathlength;
    }

    @EmbeddedId    
    @AttributeOverrides( {
        @AttributeOverride(name="ancestor", column=@Column(name="ancestor", nullable=false) ), 
        @AttributeOverride(name="descendant", column=@Column(name="descendant", nullable=false) ), 
        @AttributeOverride(name="edgetype", column=@Column(name="edgetype", nullable=false) ) } )
    @ApiModelProperty(required = true)
    public InstrumentGraphId getId() {
        return this.id;
    }
    
    public void setId(InstrumentGraphId id) {
        this.id = id;
    }
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ancestor", nullable=false, insertable=false, updatable=false)
    @ApiModelProperty(required = true)
    public Instrument getInstrumentByAncestor() {
        return this.instrumentByAncestor;
    }
    
    public void setInstrumentByAncestor(Instrument instrumentByAncestor) {
        this.instrumentByAncestor = instrumentByAncestor;
    }
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="descendant", nullable=false, insertable=false, updatable=false)
    @ApiModelProperty(required = true)
    public Instrument getInstrumentByDescendant() {
        return this.instrumentByDescendant;
    }
    
    public void setInstrumentByDescendant(Instrument instrumentByDescendant) {
        this.instrumentByDescendant = instrumentByDescendant;
    }
    
    @Column(name="pathlength", nullable=false)
    @ApiModelProperty(required = true)
    public int getPathlength() {
        return this.pathlength;
    }
    
    public void setPathlength(int pathlength) {
        this.pathlength = pathlength;
    }




}
